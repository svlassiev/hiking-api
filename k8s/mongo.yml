# NOTE: The service account `default:default` already exists in k8s cluster.
# You can create a new account following like this:
#---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: <new-account-name>
#  namespace: <namespace>
#---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: defaul-to-cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: fast
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-cdc
  labels:
    name: mongo-cdc
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    app: mongo-cdc
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo-cdc
spec:
  serviceName: "mongo-cdc"
  replicas: 3
  template:
    metadata:
      labels:
        app: mongo-cdc
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo-cdc
          image: mongo
          imagePullPolicy: Always
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip_all"
            # smallfiles are not supported anymore: https://stackoverflow.com/questions/57492145/error-when-creating-a-mongodb-replicaset-shows-unrecognized-option-smallfil
#            - "--smallfiles"
#            - "--noprealloc"
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 10m
              memory: 10M
            limits:
              cpu: 100m
              memory: 2560M
          volumeMounts:
            - name: mongo-cdc-persistent-storage
              mountPath: /data/db
        - name: mongo-cdc-sidecar
          image: cvallance/mongo-k8s-sidecar
          resources:
            requests:
              cpu: 10m
              memory: 10M
            limits:
              cpu: 100m
              memory: 2560M
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "app=mongo-cdc"
  volumeClaimTemplates:
    - metadata:
        name: mongo-cdc-persistent-storage
        # fast storage is a bit more expensive, so going with a standard one for now
#        annotations:
#          volume.beta.kubernetes.io/storage-class: "fast"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Gi